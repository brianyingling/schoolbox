%script
  var grades = [];
- @assignment.klasses.each do |klass|
  - students = ''
  - grades = ''
  .large-4.columns
    %h6= klass.course.name
    %table#students
      %tr
        %td First Name
        %td Last Name
        %td Grade
        %td Edit Grade
        %td Options
      - klass.students.each do |student|
        = form_for @grade, :remote=>true do |f|
          - grade = student.grades.where(:assignment_id=>@assignment.id).first || ''
          %tr{:id=>"tr_id_#{student.id}", :class=>'tablerow'}
            %td= student.first_name
            %td= student.last_name
            %td{:class=>"grade_td"}
              - if grade.present?
                = "#{grade.value} / #{@assignment.value}"
                = hidden_field_tag :current_grade_id, grade.id
              - else
                - grade = Grade.new
                - grade.value ||= 0.0
                - grade.save
            %script
              = "var percentage = #{(grade.value.to_f / @assignment.value.to_f) * 100}"
              = "var result = {student:'#{student.first_name} #{student.last_name}',grade:percentage}"
              = "grades.push(result);"
            %td
              = f.text_field :value, :placeholder=>'Value'
            %td
              = hidden_field_tag "student_id", student.id
              = hidden_field_tag "assignment_id", @assignment.id
              = f.submit "Save", :class=>'button radius tiny success'
  .large-8.columns
    #bar
    #donut





%script
  new Morris.Bar({
  // ID of the element in which to draw the chart.
  element: 'bar',
  // Chart data records -- each entry in this array corresponds to a point on
  // the chart.
  data: grades,
  // The name of the data record attribute that contains x-values.
  xkey: 'student',
  // A list of names of data record attributes that contain y-values.
  ykeys: ['grade'],
  // Labels for the ykeys -- will be displayed when you hover over the
  // chart.
  labels: ['grade'],
  hideHover: false
  });

  new Morris.Donut({
  element: donut,
  data: [
  {label: 'As', value: _.select(grades,function(grade){return grade.grade > 89}).length},
  {label: 'Bs', value: _.select(grades,function(grade){return grade.grade > 79 && grade.grade < 90}).length},
  {label: 'Cs', value: _.select(grades,function(grade){return grade.grade > 69 && grade.grade < 80}).length},
  {label: 'Ds', value: _.select(grades,function(grade){return grade.grade > 64 && grade.grade < 70}).length},
  {label: 'Fs', value: _.select(grades,function(grade){return grade.grade < 65}).length},



  ]


  });






